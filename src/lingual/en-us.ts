import { ILang } from "./interface";
export const enUS: ILang = {
  activateCodeAlreadyUsed: "activate code already used",
  activateCodeInvalid: "invalid activate code",
  authCodeInvalid: "invalid auth code",
  authCreateFailed: "token create failed",
  authEnterpriseFailed: "enterprise info auth failed",
  authExpiredToken: "expired token",
  authInActived: "inactived",
  authInvalidHeader: "authorization not in request headers",
  authInvalidToken: "invalid token",
  authInvalidType: "invalid auth type",
  authNeedSSL: "please access api with ssl",
  authSuNoPerm: "no permission to su",
  authTimesExceedLimit: "auth times exceed limit",
  authTypeNotSupport: "auth type not support",
  authUserNotFound: "user info not found",
  authWrongSuInfo: "invalid su info",
  cannotHaveTheSameNameAsTheParentRegion: "Cannot have the same name as the parent region!",
  categoryShouldNotBeDeleted: "Category should not be deleted",
  commandExecution: "failed to execute command",
  diagnoseModelUpdate: "bayes model update failed",
  enterpriseExpiredErrorInfo: "Your business has exceeded the license date limit and needs to be renewed before continuing to use.",
  handlerNotSet: "handler not set",
  inspectionMethodReferencedNotDeleted: "This inspection method has been referenced by the check item, please modify the relevant check item first!",
  insufficientNumberOfOrdersCanBeGenerated: "Insufficient number of orders can be generated. Please modify the numbering rules !",
  invalidAuthorizationInfo: "Invalid authorization info",
  IOError: "io error",
  lblBadRequest: "Bad request",
  lblDataNotFound: "Data not found",
  lblDBDeadLockError: "Database dead lock.",
  lblDBDup: "Data duplicate.",
  lblDBInternalError: "Database error.",
  lblNoPermission: "No permission",
  lblRequestTimeout: "Request timeout",
  lblServerError: "Server error",
  lblUnauthorized: "Please sign in",
  lblUnknownError: "Unknown error",
  orderHandlerDuplicate: "handler should not be same with seller or buyer",
  orderItemAmountOrPriceEmpty: "item amount empty or unit price empty",
  orderItemsEmpty: "order items not set",
  orderNotWorking: "order is not in working progress",
  orderNumberAlreadyExists: "Order number already exists",
  orderSnEmpty: "order sn is required",
  orderUserIdsEmpty: "user ids should not be empty",
  pleaseWaitAMoment: "please wait a moment",
  regionContainsContent: "Area contains content (subordinate area or stock material) and cannot be deleted",
  sequenceRuleConflicted: "Sequence rule conflicted",
  sequenceRuleInvalid: "seuqnece rule invalid",
  sequenceRuleNotFound: "sequence rule not found",
  systemUnitProhibitsModification: "System unit prohibits modification",
  theWarehouseHasASubareaThatCannotBeDeleted: "The warehouse has a subarea that cannot be deleted!",
  unitNotSet: "unit not set",
  userMobileAlreadyBinded: "user mobile already binded",
  userMobileNeedBind: "user mobile need to bind",
  userMobileUsedByOthers: "user mobile used by others",
  workflowNotFound: "workflow not found",
};
