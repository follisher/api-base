export interface ILang {
  activateCodeAlreadyUsed: string;
  activateCodeInvalid: string;
  authCodeInvalid: string;
  authCreateFailed: string;
  authEnterpriseFailed: string;
  authExpiredToken: string;
  authInActived: string;
  authInvalidHeader: string;
  authInvalidToken: string;
  authInvalidType: string;
  authNeedSSL: string;
  authSuNoPerm: string;
  authTimesExceedLimit: string;
  authTypeNotSupport: string;
  authUserNotFound: string;
  authWrongSuInfo: string;
  cannotHaveTheSameNameAsTheParentRegion: string;
  categoryShouldNotBeDeleted: string;
  commandExecution: string;
  diagnoseModelUpdate: string;
  enterpriseExpiredErrorInfo: string;
  handlerNotSet: string;
  inspectionMethodReferencedNotDeleted: string;
  insufficientNumberOfOrdersCanBeGenerated: string;
  invalidAuthorizationInfo: string;
  IOError: string;
  lblBadRequest: string;
  lblDataNotFound: string;
  lblDBDeadLockError: string;
  lblDBDup: string;
  lblDBInternalError: string;
  lblNoPermission: string;
  lblRequestTimeout: string;
  lblServerError: string;
  lblUnauthorized: string;
  lblUnknownError: string;
  noConnectionToServer: string;
  orderHandlerDuplicate: string;
  orderItemAmountOrPriceEmpty: string;
  orderItemsEmpty: string;
  orderNotWorking: string;
  orderNumberAlreadyExists: string;
  orderSnEmpty: string;
  orderUserIdsEmpty: string;
  pleaseWaitAMoment: string;
  regionContainsContent: string;
  sequenceRuleConflicted: string;
  sequenceRuleInvalid: string;
  sequenceRuleNotFound: string;
  systemUnitProhibitsModification: string;
  theWarehouseHasASubareaThatCannotBeDeleted: string;
  unitNotSet: string;
  userMobileAlreadyBinded: string;
  userMobileNeedBind: string;
  userMobileUsedByOthers: string;
  workflowNotFound: string;
}
